<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="28">
  <CheatEntries>
    <CheatEntry>
      <ID>29</ID>
      <Description>"============================="</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Set Fern State (Reload Savegame or Sleep to update)"</Description>
      <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>4</ID>
          <Description>"set on load"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Radiant-Win64-Shipping.exe
  Version: 
  Date   : 2019-12-07
  Author : LiquidBleh

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_SET_ON_LOAD,Radiant-Win64-Shipping.exe,41 89 87 9C 00 00 00 E8) // should be unique
alloc(newmem,$1000,"Radiant-Win64-Shipping.exe"+7475ED)

label(code)
label(return)
label(bleh)
registerSymbol(bleh)

newmem:

code:
  push eax
  mov eax, [bleh]
  mov [r15+0000009C],eax
  pop eax
  jmp return

bleh:
 dd (int)100

INJECT_SET_ON_LOAD:
  jmp newmem
  nop
  nop
return:
registersymbol(INJECT_SET_ON_LOAD)

[DISABLE]

INJECT_SET_ON_LOAD:
  db 41 89 87 9C 00 00 00

unregistersymbol(INJECT_SET_ON_LOAD)
unregistersymbol(bleh)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Radiant-Win64-Shipping.exe"+7475ED

"Radiant-Win64-Shipping.exe"+7475B2: 41 83 EE 01              -  sub r14d,01
"Radiant-Win64-Shipping.exe"+7475B6: 75 B8                    -  jne Radiant-Win64-Shipping.exe+747570
"Radiant-Win64-Shipping.exe"+7475B8: 48 8B 7C 24 48           -  mov rdi,[rsp+48]
"Radiant-Win64-Shipping.exe"+7475BD: 48 8B 5C 24 40           -  mov rbx,[rsp+40]
"Radiant-Win64-Shipping.exe"+7475C2: 4C 8B 74 24 50           -  mov r14,[rsp+50]
"Radiant-Win64-Shipping.exe"+7475C7: 41 8B 84 24 98 00 00 00  -  mov eax,[r12+00000098]
"Radiant-Win64-Shipping.exe"+7475CF: 49 8D 94 24 A0 00 00 00  -  lea rdx,[r12+000000A0]
"Radiant-Win64-Shipping.exe"+7475D7: 41 89 87 98 00 00 00     -  mov [r15+00000098],eax
"Radiant-Win64-Shipping.exe"+7475DE: 49 8D 8F A0 00 00 00     -  lea rcx,[r15+000000A0]
"Radiant-Win64-Shipping.exe"+7475E5: 41 8B 84 24 9C 00 00 00  -  mov eax,[r12+0000009C]
// ---------- INJECTING HERE ----------
"Radiant-Win64-Shipping.exe"+7475ED: 41 89 87 9C 00 00 00     -  mov [r15+0000009C],eax
// ---------- DONE INJECTING  ----------
"Radiant-Win64-Shipping.exe"+7475F4: E8 57 F5 FF FF           -  call Radiant-Win64-Shipping.exe+746B50
"Radiant-Win64-Shipping.exe"+7475F9: 41 8B 84 24 B0 00 00 00  -  mov eax,[r12+000000B0]
"Radiant-Win64-Shipping.exe"+747601: 48 8B 6C 24 58           -  mov rbp,[rsp+58]
"Radiant-Win64-Shipping.exe"+747606: 41 89 87 B0 00 00 00     -  mov [r15+000000B0],eax
"Radiant-Win64-Shipping.exe"+74760D: 49 8B C7                 -  mov rax,r15
"Radiant-Win64-Shipping.exe"+747610: 48 83 C4 20              -  add rsp,20
"Radiant-Win64-Shipping.exe"+747614: 41 5F                    -  pop r15
"Radiant-Win64-Shipping.exe"+747616: 41 5C                    -  pop r12
"Radiant-Win64-Shipping.exe"+747618: 5E                       -  pop rsi
"Radiant-Win64-Shipping.exe"+747619: C3                       -  ret 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1</ID>
          <Description>"set on sleep"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Radiant-Win64-Shipping.exe
  Version: 
  Date   : 2019-12-07
  Author : LiquidBleh

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT_SET_ON_SLEEP,Radiant-Win64-Shipping.exe,8B 86 F4 02 00 00 48) // should be unique
alloc(newmem,$1000,"Radiant-Win64-Shipping.exe"+7AFB8E)

label(code)
label(return)

newmem:

code:
  mov eax,[bleh]
  jmp return

INJECT_SET_ON_SLEEP:
  jmp newmem
  nop
return:
registersymbol(INJECT_SET_ON_SLEEP)

[DISABLE]

INJECT_SET_ON_SLEEP:
  db 8B 86 F4 02 00 00

unregistersymbol(INJECT_SET_ON_SLEEP)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Radiant-Win64-Shipping.exe"+7AFB8E

"Radiant-Win64-Shipping.exe"+7AFB71: 48 3B DF              -  cmp rbx,rdi
"Radiant-Win64-Shipping.exe"+7AFB74: 74 18                 -  je Radiant-Win64-Shipping.exe+7AFB8E
"Radiant-Win64-Shipping.exe"+7AFB76: 48 8B 0B              -  mov rcx,[rbx]
"Radiant-Win64-Shipping.exe"+7AFB79: 48 85 C9              -  test rcx,rcx
"Radiant-Win64-Shipping.exe"+7AFB7C: 74 07                 -  je Radiant-Win64-Shipping.exe+7AFB85
"Radiant-Win64-Shipping.exe"+7AFB7E: B2 01                 -  mov dl,01
"Radiant-Win64-Shipping.exe"+7AFB80: E8 7B 4C EB FF        -  call Radiant-Win64-Shipping.exe+664800
"Radiant-Win64-Shipping.exe"+7AFB85: 48 83 C3 08           -  add rbx,08
"Radiant-Win64-Shipping.exe"+7AFB89: 48 3B DF              -  cmp rbx,rdi
"Radiant-Win64-Shipping.exe"+7AFB8C: 75 E8                 -  jne Radiant-Win64-Shipping.exe+7AFB76
// ---------- INJECTING HERE ----------
"Radiant-Win64-Shipping.exe"+7AFB8E: 8B 86 F4 02 00 00     -  mov eax,[rsi+000002F4]
// ---------- DONE INJECTING  ----------
"Radiant-Win64-Shipping.exe"+7AFB94: 48 8B 7C 24 20        -  mov rdi,[rsp+20]
"Radiant-Win64-Shipping.exe"+7AFB99: 48 8B 74 24 40        -  mov rsi,[rsp+40]
"Radiant-Win64-Shipping.exe"+7AFB9E: 48 8B 5C 24 30        -  mov rbx,[rsp+30]
"Radiant-Win64-Shipping.exe"+7AFBA3: 83 F8 64              -  cmp eax,64
"Radiant-Win64-Shipping.exe"+7AFBA6: 7C 15                 -  jl Radiant-Win64-Shipping.exe+7AFBBD
"Radiant-Win64-Shipping.exe"+7AFBA8: 48 8B 0D D9 BF 9B 02  -  mov rcx,[Radiant-Win64-Shipping.exe+316BB88]
"Radiant-Win64-Shipping.exe"+7AFBAF: BA 02 00 00 00        -  mov edx,00000002
"Radiant-Win64-Shipping.exe"+7AFBB4: 48 83 C4 28           -  add rsp,28
"Radiant-Win64-Shipping.exe"+7AFBB8: E9 73 AA F7 FF        -  jmp Radiant-Win64-Shipping.exe+72A630
"Radiant-Win64-Shipping.exe"+7AFBBD: 83 F8 1E              -  cmp eax,1E
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"fern state"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">29:State1
99:State2
100:State3
</DropDownList>
          <VariableType>4 Bytes</VariableType>
          <Address>bleh</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>27</ID>
      <Description>"============================="</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>23</ID>
      <Description>"Animation Speed Default Value"</Description>
      <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>25</ID>
          <Description>"Change the  Value to set the speed"</Description>
          <VariableType>Float</VariableType>
          <Address>Setter</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>26</ID>
          <Description>"Ignore this and childs"</Description>
          <Options moManualExpandCollapse="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>19</ID>
              <Description>"set"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Radiant-Win64-Shipping.exe
  Version: 
  Date   : 2019-10-30
  Author : LiquidBleh

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(INJECT_ANIM_SET,Radiant-Win64-Shipping.exe,F3 0F 10 80 08 03 00 00) // should be unique
alloc(newmem,$1000,"Radiant-Win64-Shipping.exe"+1840BAB)

label(code)
label(return)
label(value)
registerSymbol(value)
label(setter)
registerSymbol(setter)


newmem:

code:
  movss xmm1, [setter]
  movss [value], xmm1
  movss xmm0,[rax+00000308]
  jmp return

value:
  dd (float)1

setter:
 dd (float)2.3

INJECT_ANIM_SET:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(INJECT_ANIM_SET)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
INJECT_ANIM_SET:
  db F3 0F 10 80 08 03 00 00

unregistersymbol(INJECT_ANIM_SET)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Radiant-Win64-Shipping.exe"+1840BAB

"Radiant-Win64-Shipping.exe"+1840B84: 48 8B D1                 -  mov rdx,rcx
"Radiant-Win64-Shipping.exe"+1840B87: 41 B8 01 00 00 00        -  mov r8d,00000001
"Radiant-Win64-Shipping.exe"+1840B8D: 48 8B 0D 2C 71 A5 01     -  mov rcx,[Radiant-Win64-Shipping.exe+3297CC0]
"Radiant-Win64-Shipping.exe"+1840B94: E8 E7 DC 3A 00           -  call Radiant-Win64-Shipping.exe+1BEE880
"Radiant-Win64-Shipping.exe"+1840B99: 48 85 C0                 -  test rax,rax
"Radiant-Win64-Shipping.exe"+1840B9C: 74 1A                    -  je Radiant-Win64-Shipping.exe+1840BB8
"Radiant-Win64-Shipping.exe"+1840B9E: 41 B0 01                 -  mov r8l,01
"Radiant-Win64-Shipping.exe"+1840BA1: 33 D2                    -  xor edx,edx
"Radiant-Win64-Shipping.exe"+1840BA3: 48 8B C8                 -  mov rcx,rax
"Radiant-Win64-Shipping.exe"+1840BA6: E8 A5 8F 3F 00           -  call Radiant-Win64-Shipping.exe+1C39B50
// ---------- INJECTING HERE ----------
"Radiant-Win64-Shipping.exe"+1840BAB: F3 0F 10 80 08 03 00 00  -  movss xmm0,[rax+00000308]
// ---------- DONE INJECTING  ----------
"Radiant-Win64-Shipping.exe"+1840BB3: 48 83 C4 28              -  add rsp,28
"Radiant-Win64-Shipping.exe"+1840BB7: C3                       -  ret 
"Radiant-Win64-Shipping.exe"+1840BB8: F3 0F 10 05 18 CF C1 00  -  movss xmm0,[Radiant-Win64-Shipping.exe+245DAD8]
"Radiant-Win64-Shipping.exe"+1840BC0: 48 83 C4 28              -  add rsp,28
"Radiant-Win64-Shipping.exe"+1840BC4: C3                       -  ret 
"Radiant-Win64-Shipping.exe"+1840BC5: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1840BC6: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1840BC7: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1840BC8: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1840BC9: CC                       -  int 3 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>20</ID>
              <Description>"update"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Radiant-Win64-Shipping.exe
  Version: 
  Date   : 2019-10-30
  Author : LiquidBleh

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(INJECT_ANIM_UPDATE,Radiant-Win64-Shipping.exe,F3 0F 59 81 08 03 00 00) // should be unique
alloc(newmem,$1000,"Radiant-Win64-Shipping.exe"+1C4E0E8)

label(code)
label(return)

newmem:

code:
  mulss xmm0,[value]
  mulss xmm0,[rcx+00000308]
  jmp return

INJECT_ANIM_UPDATE:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(INJECT_ANIM_UPDATE)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
INJECT_ANIM_UPDATE:
  db F3 0F 59 81 08 03 00 00

unregistersymbol(INJECT_ANIM_UPDATE)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Radiant-Win64-Shipping.exe"+1C4E0E8

"Radiant-Win64-Shipping.exe"+1C4E0D7: 5B                       -  pop rbx
"Radiant-Win64-Shipping.exe"+1C4E0D8: C3                       -  ret 
"Radiant-Win64-Shipping.exe"+1C4E0D9: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C4E0DA: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C4E0DB: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C4E0DC: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C4E0DD: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C4E0DE: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C4E0DF: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C4E0E0: F3 0F 10 81 0C 03 00 00  -  movss xmm0,[rcx+0000030C]
// ---------- INJECTING HERE ----------
"Radiant-Win64-Shipping.exe"+1C4E0E8: F3 0F 59 81 08 03 00 00  -  mulss xmm0,[rcx+00000308]
// ---------- DONE INJECTING  ----------
"Radiant-Win64-Shipping.exe"+1C4E0F0: F3 0F 59 81 10 03 00 00  -  mulss xmm0,[rcx+00000310]
"Radiant-Win64-Shipping.exe"+1C4E0F8: C3                       -  ret 
"Radiant-Win64-Shipping.exe"+1C4E0F9: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C4E0FA: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C4E0FB: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C4E0FC: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C4E0FD: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C4E0FE: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C4E0FF: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C4E100: 40 53                    -  push rbx
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>21</ID>
              <Description>"reset"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Radiant-Win64-Shipping.exe
  Version: 
  Date   : 2019-10-30
  Author : LiquidBleh

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(INJECT_ANIM_RESET,Radiant-Win64-Shipping.exe,F3 0F 11 81 08 03 00 00) // should be unique
alloc(newmem,$1000,"Radiant-Win64-Shipping.exe"+1C50029)

label(code)
label(return)

newmem:

code:
  mov [value], (float)1
  movss xmm0, [value]
  movss [rcx+00000308],xmm0
  jmp return

INJECT_ANIM_RESET:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(INJECT_ANIM_RESET)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
INJECT_ANIM_RESET:
  db F3 0F 11 81 08 03 00 00

unregistersymbol(INJECT_ANIM_RESET)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Radiant-Win64-Shipping.exe"+1C50029

"Radiant-Win64-Shipping.exe"+1C5000B: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C5000C: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C5000D: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C5000E: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C5000F: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C50010: F3 0F 10 81 14 03 00 00  -  movss xmm0,[rcx+00000314]
"Radiant-Win64-Shipping.exe"+1C50018: 0F 2F C8                 -  comiss xmm1,xmm0
"Radiant-Win64-Shipping.exe"+1C5001B: 72 0C                    -  jb Radiant-Win64-Shipping.exe+1C50029
"Radiant-Win64-Shipping.exe"+1C5001D: F3 0F 10 81 18 03 00 00  -  movss xmm0,[rcx+00000318]
"Radiant-Win64-Shipping.exe"+1C50025: F3 0F 5D C1              -  minss xmm0,xmm1
// ---------- INJECTING HERE ----------
"Radiant-Win64-Shipping.exe"+1C50029: F3 0F 11 81 08 03 00 00  -  movss [rcx+00000308],xmm0
// ---------- DONE INJECTING  ----------
"Radiant-Win64-Shipping.exe"+1C50031: C3                       -  ret 
"Radiant-Win64-Shipping.exe"+1C50032: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C50033: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C50034: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C50035: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C50036: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C50037: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C50038: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C50039: CC                       -  int 3 
"Radiant-Win64-Shipping.exe"+1C5003A: CC                       -  int 3 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>22</ID>
              <Description>"value"</Description>
              <VariableType>Float</VariableType>
              <Address>value</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>28</ID>
      <Description>"============================="</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
